// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TESTDAL;

#nullable disable

namespace TESTDAL.Migrations
{
    [DbContext(typeof(testDBcontetxt))]
    [Migration("20231108092213_v4")]
    partial class v4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TESTDAL.one", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("oness");
                });

            modelBuilder.Entity("TESTDAL.parent", b =>
                {
                    b.Property<int>("parentkey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("parentkey"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("parentkey");

                    b.ToTable("parents");

                    b.HasDiscriminator<string>("Discriminator").HasValue("parent");
                });

            modelBuilder.Entity("TESTDAL.to_one", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("relatedto_oneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("relatedto_oneId");

                    b.ToTable("to_Ones");
                });

            modelBuilder.Entity("TESTDAL.child", b =>
                {
                    b.HasBaseType("TESTDAL.parent");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("child");
                });

            modelBuilder.Entity("TESTDAL.child2", b =>
                {
                    b.HasBaseType("TESTDAL.parent");

                    b.Property<string>("hobby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("child2");
                });

            modelBuilder.Entity("TESTDAL.to_one", b =>
                {
                    b.HasOne("TESTDAL.one", "relatedto_one")
                        .WithMany()
                        .HasForeignKey("relatedto_oneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("relatedto_one");
                });
#pragma warning restore 612, 618
        }
    }
}
